# Hikkafrom telethon import events
from telethon.tl.types import Message
import re

class CalculatorModule:
    """–ú–æ–¥—É–ª—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –¥–ª—è Hikka Userbot"""

    def __init__(self, client):
        self.client = client
        self.name = "Calculator"
        self.version = "1.0"
        self.author = "Your Name"
        self.description = "–ü—Ä–æ—Å—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤—ã—Ä–∞–∂–µ–Ω–∏–π"

    async def calculate(self, expr: str) -> float:
        """–í—ã—á–∏—Å–ª—è–µ—Ç –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ"""
        try:
            # –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
            expr = expr.replace(" ", "")
            if not re.match(r'^[\d+\-*/(). ]+$', expr):
                return "‚ùå –û—à–∏–±–∫–∞: –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã"
            
            # –í—ã—á–∏—Å–ª—è–µ–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
            result = eval(expr)  # –û—Å—Ç–æ—Ä–æ–∂–Ω–æ! –í —Ä–µ–∞–ª—å–Ω–æ–º –±–æ—Ç–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å safer_eval
            return f"üî¢ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}"
        except ZeroDivisionError:
            return "‚ùå –û—à–∏–±–∫–∞: –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å"
        except SyntaxError:
            return "‚ùå –û—à–∏–±–∫–∞: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ"
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

    async def cmd_calc(self, event: Message):
        """–í—ã—á–∏—Å–ª—è–µ—Ç –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ"""
        args = event.raw_text.split(maxsplit=1)
        if len(args) < 2:
            await event.edit("**‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:** `.calc <–≤—ã—Ä–∞–∂–µ–Ω–∏–µ>`\n**–ü—Ä–∏–º–µ—Ä:** `.calc 2+2*3`")
            return
        
        expr = args[1]
        result = await self.calculate(expr)
        await event.edit(result)

    async def install(self):
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –º–æ–¥—É–ª—è"""
        await self.client.send_message(
            "me",
            "‚úÖ **–ú–æ–¥—É–ª—å Calculator —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!**\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `.calc <–≤—ã—Ä–∞–∂–µ–Ω–∏–µ>` –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π."
        )

async def setup(client):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥—É–ª—è"""
    module = CalculatorModule(client)
    client.add_event_handler(
        module.cmd_calc,
        events.NewMessage(pattern=r"^\.calc\s+.+")
    )
    await module.install()
    return module
